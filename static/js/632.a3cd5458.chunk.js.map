{"version":3,"file":"static/js/632.a3cd5458.chunk.js","mappings":"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","sources":["Services/fetchApi.js","components/MovieDetailsPage/MovieDetailsPage.styled.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return resp.data.results;\n};\n\nexport const fetchCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 70%;\n`;\n\nexport const GoBackButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background: rgb(59, 79, 87);\n  background: linear-gradient(\n    90deg,\n    rgba(59, 79, 87, 1) 13%,\n    rgba(86, 96, 147, 1) 79%\n  );\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: #fff 4px 4px 0 0, #000 4px 4px 0 1px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 20px;\n  max-weight: 50px;\n  padding: 12px 10px;\n  text-align: center;\n  text-transform: uppercase;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  height: 100%;\n  margin: auto 0;\n  border-radius: 5px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const WrapperDescription = styled.div`\n  margin-left: 24px;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 35px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const Year = styled.p`\n  margin-right: 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 32px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const Score = styled.span`\n  margin-left: 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 20px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const Description = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0px;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Overview = styled.h3`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 24px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const OverviewText = styled.p`\n  margin: 0px;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Information = styled.h2`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 35px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\n\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'Services/fetchApi';\nimport {\n  Container,\n  Description,\n  GoBackButton,\n  Information,\n  MoviePoster,\n  MovieTitle,\n  Overview,\n  OverviewText,\n  Score,\n  Wrapper,\n  WrapperDescription,\n  Year,\n} from './MovieDetailsPage.styled';\n\nconst MoviesDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(result => setMovie(result))\n      .catch(error => setError('404 Page Not Found'))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  return (\n    <>\n      <GoBackButton onClick={handleClick}>Go Back</GoBackButton>\n\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {movie && (\n        <Container>\n          <Wrapper>\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <WrapperDescription>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <Year>{getYear()}</Year>\n              <Description>\n                User score: <Score>{movie.popularity}</Score>\n              </Description>\n              <div>\n                <Overview>Overview</Overview>\n                <OverviewText>{movie.overview}</OverviewText>\n              </div>\n            </WrapperDescription>\n          </Wrapper>\n        </Container>\n      )}\n      <hr />\n      <Container>\n        <Information>Additional Information</Information>\n        <Wrapper>\n          <NavLink to={`/movies/${movieId}/reviews`} state={location.state}>\n            <p>Reviews</p>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={{ marginLeft: '20px' }}\n            state={location.state}\n          >\n            <p>Cast</p>\n          </NavLink>\n        </Wrapper>\n        <hr />\n        <Outlet />\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["API_KEY","axios","END_POINTS","getMovies","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","Container","styled","GoBackButton","MoviePoster","Wrapper","WrapperDescription","MovieTitle","Year","Score","Description","Overview","OverviewText","Information","useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","then","result","catch","finally","onClick","state","from","Loader","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","to","style","marginLeft"],"sourceRoot":""}