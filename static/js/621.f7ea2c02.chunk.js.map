{"version":3,"file":"static/js/621.f7ea2c02.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,sIAAc,EAAd,SACJC,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBAC6BF,EAD7B,wCADI,cACjBK,EADiB,yBAIhBA,EAAKC,KAAKC,SAJM,2CAAH,qDAOTC,EAAe,mCAAG,WAAOC,GAAP,uFACVL,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,YACyBO,EADzB,oBACuCT,EADvC,oBADU,cACvBK,EADuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfI,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACPR,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBACgCF,EADhC,iBACgDY,EADhD,kBAC8DD,EAD9D,wCADO,cACpBN,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZM,EAAY,mCAAG,WAAOJ,GAAP,4FAAWG,EAAX,+BAAkB,EAAlB,SACLR,EAAAA,EAAAA,IAAA,UACZH,EADY,YACAC,EADA,YAC2BO,EAD3B,YACiCP,EADjC,oBACoEF,EADpE,gCACmGY,IAF9F,cAClBP,EADkB,yBAIjBA,EAAKC,KAAKC,SAJO,2CAAH,sDAOZO,EAAY,mCAAG,WAAOL,GAAP,uFACLL,EAAAA,EAAAA,IAAA,UACZH,EADY,kBACMQ,GADN,OACWP,EADX,oBAC8CF,EAD9C,oBADK,cAClBK,EADkB,yBAIjBA,EAAKC,KAAKS,MAJO,2CAAH,qD,8ECRzB,UA7B0B,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAEFD,GAAW,IACXnB,EAAAA,EAAAA,MACCqB,MAAK,SAAAC,GACFP,EAAUO,EACb,IACAC,OAAM,SAAAP,GACHC,EAAS,qBACZ,IACAO,SAAQ,kBAAML,GAAW,EAAjB,GAGhB,GAAE,KAEC,gCACCD,GAAW,aACXF,IAAS,yBAAMA,IACfF,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAIrC,C,2CCbD,IAhBkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAAQW,EAAmB,EAAnBA,aAC3B,OACE,+BACE,wBACGX,EAAOY,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAatB,GAAMuB,MAAO,CAAEC,KAAML,GAA1C,UACE,wBAAKE,OAFArB,EADC,OAUnB,C","sources":["Services/fetchApi.js","components/Homepage/Homepage.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n    const resp = await axios.get(\n        `${BASE_URL}/${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return resp.data.results;\n}\n\nexport const fetchCredits = async (id) => {\n    const resp = await axios.get(\n        `${BASE_URL}/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data.cast;\n}\n","import MovieList from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from \"react\";\nimport { getMovies } from \"Services/fetchApi\";\n\nconst GetTrendingMovies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchTrendingMovies = () => {\n            setLoading(true);\n            getMovies()\n            .then(result => {\n                setMovies(result)\n            })\n            .catch(error => {\n                setError('404 Page Not Found')\n            })\n            .finally(() => setLoading(false))\n        }\n        fetchTrendingMovies()\n    }, [])\n    return (\n        <>\n        {loading && 'loading...'}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n        </>\n        \n    )\n}\n\nexport default GetTrendingMovies","import { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n"],"names":["API_KEY","BASE_URL","END_POINTS","getMovies","axios","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","then","result","catch","finally","prevLocation","map","original_title","to","state","from"],"sourceRoot":""}