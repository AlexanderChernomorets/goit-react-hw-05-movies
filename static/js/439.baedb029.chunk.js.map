{"version":3,"file":"static/js/439.baedb029.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,sIAAc,EAAd,SACJC,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBAC6BF,EAD7B,wCADI,cACjBK,EADiB,yBAIhBA,EAAKC,KAAKC,SAJM,2CAAH,qDAOTC,EAAe,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,YACyBO,EADzB,oBACuCT,EADvC,oBADU,cACvBK,EADuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfI,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACPR,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBACgCF,EADhC,iBACgDY,EADhD,kBAC8DD,EAD9D,wCADO,cACpBN,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZM,EAAY,mCAAG,WAAOJ,GAAP,4FAAWG,EAAX,+BAAkB,EAAlB,SACPR,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,YACyBO,EADzB,YAC+BP,EAD/B,oBACkEF,EADlE,gCACiGY,IAF1F,cACpBP,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZO,EAAY,mCAAG,WAAML,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIQ,GADJ,OACSP,EADT,oBAC4CF,EAD5C,oBADO,cACpBK,EADoB,yBAInBA,EAAKC,KAAKS,MAJS,2CAAH,qD,2FCvCZC,E,OAAQC,GAAAA,GAAH,iS,SCUlB,EAVsB,WACpB,OACE,+BACE,0BACE,SAACD,EAAD,iCAIP,E,mCCyBD,EA7B0B,WACxB,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXrB,EAAAA,EAAAA,MACGuB,MAAK,SAAAC,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAP,GACLC,EAAS,qBACV,IACAO,SAAQ,kBAAML,GAAW,EAAjB,GAGd,GAAE,KAED,iCACE,SAAC,EAAD,IACCD,IAAW,SAACO,EAAA,EAAD,IACXT,IAAS,yBAAMA,IACfF,IAAU,SAACY,EAAA,EAAD,CAAWZ,OAAQA,MAGnC,C,yFC/BYa,EAAYf,EAAAA,GAAAA,GAAH,+FAOTgB,EAAahB,EAAAA,GAAAA,EAAH,4T,GAgBFA,EAAAA,GAAAA,GAAH,mR,QCDlB,EApBkB,SAAC,GAA8B,IAA5BE,EAA2B,EAA3BA,OAAQe,EAAmB,EAAnBA,aAC3B,OACE,+BACE,SAACF,EAAD,UACGb,EAAOgB,KAAI,gBAAG1B,EAAH,EAAGA,GAAI2B,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAa5B,GACf6B,MAAO,CAAEC,KAAML,GACfM,MAAO,CAAEC,eAAgB,QAH3B,UAKE,SAACR,EAAD,UAAaG,OANR3B,EADC,OAcnB,C","sources":["Services/fetchApi.js","components/Homepage/HomepageTitle/HomepageTitle.styled.js","components/Homepage/HomepageTitle/HomepageTitle.jsx","components/Homepage/Homepage.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return resp.data.results;\n};\n\nexport const fetchCredits = async id => {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 45px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: rgba(148, 0, 211, 40%) 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n","import { Title } from './HomepageTitle.styled';\n\nconst HomepageTitle = () => {\n  return (\n    <>\n      <div>\n        <Title>Trending movies</Title>\n      </div>\n    </>\n  );\n};\n\nexport default HomepageTitle;\n","import HomepageTitle from 'components/Homepage/HomepageTitle/HomepageTitle';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'Services/fetchApi';\n\nconst GetTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(result => {\n          setMovies(result);\n        })\n        .catch(error => {\n          setError('404 Page Not Found');\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <>\n      <HomepageTitle />\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default GetTrendingMovies;\n","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: block;\n  list-style: circle;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const FilmsTitle = styled.p`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 30px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n\n  :hover {\n    font-size: 31px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 40px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FilmsList, FilmsTitle } from './MovieList.styled';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <FilmsList>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: prevLocation }}\n              style={{ textDecoration: 'none' }}\n            >\n              <FilmsTitle>{original_title}</FilmsTitle>\n            </Link>\n          </li>\n        ))}\n      </FilmsList>\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n"],"names":["API_KEY","BASE_URL","END_POINTS","getMovies","axios","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","Title","styled","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","then","result","catch","finally","Loader","MovieList","FilmsList","FilmsTitle","prevLocation","map","original_title","to","state","from","style","textDecoration"],"sourceRoot":""}