{"version":3,"file":"static/js/879.4af06470.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","Pages/Movies.jsx","Services/fetchApi.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = evt => {\n    setSearchQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Please, Enter the film title');\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n        />\n        <button type='submit'>\n            Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from '../Services/fetchApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(resp => {\n          if (!resp.length) {\n            alert('Movies not found, please try again!');\n          }\n\n          setMovies(resp);\n        })\n        .catch(error => {\n          setError('404 Page Not Found');\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <SearchBar onSubmit={onSubmit} />\n      {movies && <MovieList movies={movies} prevLocation={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n    const resp = await axios.get(\n        `${BASE_URL}/${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return resp.data.results;\n}\n\nexport const fetchCredits = async (id) => {\n    const resp = await axios.get(\n        `${BASE_URL}/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data.cast;\n}\n","import { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n"],"names":["onSubmit","useState","searchQuery","setSearchQuery","evt","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","resp","length","catch","finally","query","MovieList","prevLocation","API_KEY","BASE_URL","END_POINTS","getMovies","axios","data","results","getMovieDetails","id","page","fetchReviews","fetchCredits","cast","map","original_title","to","state","from"],"sourceRoot":""}