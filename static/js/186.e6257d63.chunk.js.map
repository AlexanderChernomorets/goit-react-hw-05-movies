{"version":3,"file":"static/js/186.e6257d63.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,sIAAc,EAAd,SACJC,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBAC6BF,EAD7B,wCADI,cACjBK,EADiB,yBAIhBA,EAAKC,KAAKC,SAJM,2CAAH,qDAOTC,EAAe,mCAAG,WAAOC,GAAP,uFACVL,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,YACyBO,EADzB,oBACuCT,EADvC,oBADU,cACvBK,EADuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfI,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACPR,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBACgCF,EADhC,iBACgDY,EADhD,kBAC8DD,EAD9D,wCADO,cACpBN,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZM,EAAY,mCAAG,WAAOJ,GAAP,4FAAWG,EAAX,+BAAkB,EAAlB,SACLR,EAAAA,EAAAA,IAAA,UACZH,EADY,YACAC,EADA,YAC2BO,EAD3B,YACiCP,EADjC,oBACoEF,EADpE,gCACmGY,IAF9F,cAClBP,EADkB,yBAIjBA,EAAKC,KAAKC,SAJO,2CAAH,sDAOZO,EAAY,mCAAG,WAAOL,GAAP,uFACLL,EAAAA,EAAAA,IAAA,UACZH,EADY,kBACMQ,GADN,OACWP,EADX,oBAC8CF,EAD9C,oBADK,cAClBK,EADkB,yBAIjBA,EAAKC,KAAKS,MAJO,2CAAH,qD,yGCJzB,UAjCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEDX,EAAAA,EAAAA,IAAaQ,GAFZ,OAEhBI,EAFgB,OAGtBP,EAAWO,GAHW,gDAKtBL,EAAS,EAAD,IALc,yDAAH,qDAQvBI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAS,yBAAMA,KAChB,wBACGF,EAAQS,KAAI,YAA8B,IAA3BjB,EAA0B,EAA1BA,GAAIkB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OAAO,2BACL,oCAAYD,MACZ,uBAAIC,MAFUnB,EAIjB,QAIR,C","sources":["Services/fetchApi.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n    const resp = await axios.get(\n        `${BASE_URL}/${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return resp.data.results;\n}\n\nexport const fetchCredits = async (id) => {\n    const resp = await axios.get(\n        `${BASE_URL}/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data.cast;\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Services/fetchApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const result = await fetchReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","END_POINTS","getMovies","axios","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchMovieReviews","result","map","author","content"],"sourceRoot":""}