{"version":3,"file":"static/js/779.5c639897.chunk.js","mappings":"+SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADiB,+BAGjB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,sIAAc,EAAd,SACJF,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACiBF,EADjB,wCADI,cACjBI,EADiB,yBAIhBA,EAAKC,KAAKC,SAJM,2CAAH,qDAOTC,EAAe,mCAAG,WAAMC,GAAN,uFACVP,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaM,EADb,oBAC2BR,EAD3B,oBADU,cACvBI,EADuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfI,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACPV,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,iBACoCW,EADpC,kBACkDD,EADlD,wCADO,cACpBN,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZM,EAAY,mCAAG,WAAOJ,GAAP,4FAAWG,EAAX,+BAAkB,EAAlB,SACPV,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaM,EADb,YACmBN,EADnB,oBACsDF,EADtD,gCACqFW,IAF9E,cACpBP,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZO,EAAY,mCAAG,WAAML,GAAN,uFACPP,EAAAA,EAAAA,IAAA,gBACRO,GADQ,OACHN,EADG,oBACgCF,EADhC,oBADO,cACpBI,EADoB,yBAInBA,EAAKC,KAAKS,MAJS,2CAAH,qD,kKCxCZC,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,EAAH,wMAUVE,EAASF,EAAAA,GAAAA,EAAH,uKAQNG,EAAeH,EAAAA,GAAAA,EAAH,4NAWZI,EAAQJ,EAAAA,GAAAA,EAAH,4N,SCkBlB,EA5CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEDjB,EAAAA,EAAAA,IAAac,GAFZ,OAEhBI,EAFgB,OAGtBP,EAAWO,GAHW,gDAKtBL,EAAS,EAAD,IALc,yDAAH,qDAQvBI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAS,yBAAMA,KAChB,SAACT,EAAD,UACsB,IAAnBO,EAAQS,QACP,yBACE,SAACX,EAAD,0CAGFE,EAAQU,KAAI,SAAAC,GAEV,OADAC,QAAQC,IAAIF,IAEV,2BACE,UAACd,EAAD,uBACU,SAACD,EAAD,UAASe,EAAOG,aAE1B,SAACnB,EAAD,UAAagB,EAAOI,YAJbJ,EAAOzB,GAOnB,QAKV,C","sources":["Services/fetchApi.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return resp.data.results;\n};\n\nexport const fetchCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ReviewText = styled.p`\n  margin: 0 0 20px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 18px;\n  font-family: Orienta, sans-serif;\n  padding-left: 30px;\n`;\n\nexport const Author = styled.p`\n  margin: 0 0 0 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 32px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const ReviewAuthor = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 5px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Error = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 5px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 40px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Services/fetchApi';\nimport {\n  Author,\n  ReviewAuthor,\n  ReviewList,\n  ReviewText,\n  Error,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const result = await fetchReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ReviewList>\n        {reviews.length === 0 ? (\n          <li>\n            <Error>There is no reviews yet..</Error>\n          </li>\n        ) : (\n          reviews.map(review => {\n            console.log(review);\n            return (\n              <li key={review.id}>\n                <ReviewAuthor>\n                  Author: <Author>{review.author}</Author>\n                </ReviewAuthor>\n                <ReviewText>{review.content}</ReviewText>\n              </li>\n            );\n          })\n        )}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","END_POINTS","getMovies","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","ReviewList","styled","ReviewText","Author","ReviewAuthor","Error","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchMovieReviews","result","length","map","review","console","log","author","content"],"sourceRoot":""}