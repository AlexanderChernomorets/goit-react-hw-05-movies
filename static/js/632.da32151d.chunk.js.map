{"version":3,"file":"static/js/632.da32151d.chunk.js","mappings":"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","sources":["Services/fetchApi.js","components/MovieDetailsPage/MovieDetailsPage.styled.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '2d47787539d4eda04ce92011fd824a06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCredits = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 70%;\n`;\n\nexport const GoBackButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background: rgb(59, 79, 87);\n  background: linear-gradient(\n    90deg,\n    rgba(59, 79, 87, 1) 13%,\n    rgba(86, 96, 147, 1) 79%\n  );\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: #fff 4px 4px 0 0, #000 4px 4px 0 1px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 20px;\n  max-weight: 50px;\n  padding: 12px 10px;\n  text-align: center;\n  text-transform: uppercase;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  height: 100%;\n  margin: auto 0;\n  border-radius: 5px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const WrapperDescription = styled.div`\n  margin-left: 24px;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 35px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const Year = styled.p`\n  margin-right: 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 32px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const Score = styled.span`\n  margin-left: 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 20px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const Description = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0px;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Overview = styled.h3`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 24px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\nexport const OverviewText = styled.p`\n  margin: 0px;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Information = styled.h2`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 35px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n\n\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'Services/fetchApi';\nimport {\n  Container,\n  Description,\n  GoBackButton,\n  Information,\n  MoviePoster,\n  MovieTitle,\n  Overview,\n  OverviewText,\n  Score,\n  Wrapper,\n  WrapperDescription,\n  Year,\n} from './MovieDetailsPage.styled';\n\nconst MoviesDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(result => setMovie(result))\n      .catch(error => setError('404 Page Not Found'))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  return (\n    <>\n      <GoBackButton onClick={handleClick}>Go Back</GoBackButton>\n\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {movie && (\n        <Container>\n          <Wrapper>\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <WrapperDescription>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <Year>{getYear()}</Year>\n              <Description>\n                User score: <Score>{movie.popularity}</Score>\n              </Description>\n              <div>\n                <Overview>Overview</Overview>\n                <OverviewText>{movie.overview}</OverviewText>\n              </div>\n            </WrapperDescription>\n          </Wrapper>\n        </Container>\n      )}\n      <hr />\n      <Container>\n        <Information>Additional Information</Information>\n        <Wrapper>\n          <NavLink to={`/movies/${movieId}/reviews`} state={location.state}>\n            <p>Reviews</p>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={{ marginLeft: '20px' }}\n            state={location.state}\n          >\n            <p>Cast</p>\n          </NavLink>\n        </Wrapper>\n        <hr />\n        <Outlet />\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["KEY","axios","getMovies","params","api_key","data","results","getMovieDetails","movieId","fetchCredits","cast","fetchReviews","fetchByQuery","query","include_adult","Container","styled","GoBackButton","MoviePoster","Wrapper","WrapperDescription","MovieTitle","Year","Score","Description","Overview","OverviewText","Information","useState","movie","setMovie","error","setError","loading","setLoading","useParams","location","useLocation","navigate","useNavigate","useEffect","then","result","catch","finally","onClick","state","from","Loader","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","to","style","marginLeft"],"sourceRoot":""}