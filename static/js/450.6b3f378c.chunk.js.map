{"version":3,"file":"static/js/450.6b3f378c.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEXC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,sIAAc,EAAd,SACJC,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBAC6BF,EAD7B,wCADI,cACjBK,EADiB,yBAIhBA,EAAKC,KAAKC,SAJM,2CAAH,qDAOTC,EAAe,mCAAG,WAAOC,GAAP,uFACVL,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,YACyBO,EADzB,oBACuCT,EADvC,oBADU,cACvBK,EADuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfI,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACPR,EAAAA,EAAAA,IAAA,UACdH,EADc,YACFC,EADE,oBACgCF,EADhC,iBACgDY,EADhD,kBAC8DD,EAD9D,wCADO,cACpBN,EADoB,yBAInBA,EAAKC,KAAKC,SAJS,2CAAH,sDAOZM,EAAY,mCAAG,WAAOJ,GAAP,4FAAWG,EAAX,+BAAkB,EAAlB,SACLR,EAAAA,EAAAA,IAAA,UACZH,EADY,YACAC,EADA,YAC2BO,EAD3B,YACiCP,EADjC,oBACoEF,EADpE,gCACmGY,IAF9F,cAClBP,EADkB,yBAIjBA,EAAKC,KAAKC,SAJO,2CAAH,sDAOZO,EAAY,mCAAG,WAAOL,GAAP,uFACLL,EAAAA,EAAAA,IAAA,UACZH,EADY,kBACMQ,GADN,OACWP,EADX,oBAC8CF,EAD9C,oBADK,cAClBK,EADkB,yBAIjBA,EAAKC,KAAKS,MAJO,2CAAH,qD,sFCyCzB,UAxE0B,WACxB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAIQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEbC,EAAkB,CACpBC,MAAO,WAcT,OAPAC,EAAAA,EAAAA,YAAU,WACRT,GAAW,IACXd,EAAAA,EAAAA,IAAgBe,GACbS,MAAK,SAAAC,GAAM,OAAIf,EAASe,EAAb,IACXC,OAAM,SAAAf,GAAK,OAAIC,EAAS,qBAAb,IACXe,SAAQ,kBAAMb,GAAW,EAAjB,GACZ,GAAE,CAACC,KAEF,iCACE,mBAAQa,QAbQ,WAAO,IAAD,IACxBT,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUY,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAWG,qBAECjB,GAAW,aACXF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBACEsB,IAAG,0CAAqCtB,EAAMuB,aAC9CC,IAAKxB,EAAMyB,SAEb,wBAAKzB,EAAMyB,SACX,6BAlCc,IAAIC,KAAK1B,EAAM2B,cAAcC,cAkC3C,QACA,wCAAgB5B,EAAM6B,eACtB,4BACE,sCACA,uBAAI7B,EAAM8B,kBAIhB,mBACA,4BACE,oDACA,SAAC,KAAD,CACEC,GAAE,kBAAazB,EAAb,YACF0B,MAAO,qBAAGC,SAA2BrB,OAAkBsB,CAAhD,EACPd,MAAOZ,EAASY,MAHlB,UAKE,sCAGF,SAAC,KAAD,CACEW,GAAE,kBAAazB,EAAb,SACF0B,MAAO,qBAAGC,SAA2BrB,OAAkBsB,CAAhD,EACPd,MAAOZ,EAASY,MAHlB,UAKE,mCAEF,mBACA,SAAC,KAAD,SAIP,C","sources":["Services/fetchApi.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${BASE_URL}/${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n    const resp = await axios.get(\n        `${BASE_URL}/${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return resp.data.results;\n}\n\nexport const fetchCredits = async (id) => {\n    const resp = await axios.get(\n        `${BASE_URL}/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data.cast;\n}\n","import { useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'Services/fetchApi';\n\nconst MoviesDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  let activeClassName = {\n    color: '#2196f3',\n  };\n\n  const handleClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(result => setMovie(result))\n      .catch(error => setError('404 Page Not Found'))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  return (\n    <>\n      <button onClick={handleClick}>Go Back</button>\n\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      {movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <h3>{movie.title}</h3>\n          <p>({getYear()})</p>\n          <p>User score: {movie.popularity}</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h2>Additional Information</h2>\n        <NavLink\n          to={`/movies/${movieId}/reviews`}\n          style={({ isActive }) => (isActive ? activeClassName : undefined)}\n          state={location.state}\n        >\n          <p>Reviews</p>\n        </NavLink>\n\n        <NavLink\n          to={`/movies/${movieId}/cast`}\n          style={({ isActive }) => (isActive ? activeClassName : undefined)}\n          state={location.state}\n        >\n          <p>Cast</p>\n        </NavLink>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["API_KEY","BASE_URL","END_POINTS","getMovies","axios","resp","data","results","getMovieDetails","id","fetchByQuery","query","page","fetchReviews","fetchCredits","cast","useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","activeClassName","color","useEffect","then","result","catch","finally","onClick","state","from","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","to","style","isActive","undefined"],"sourceRoot":""}