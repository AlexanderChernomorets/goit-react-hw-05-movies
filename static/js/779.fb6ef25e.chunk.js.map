{"version":3,"file":"static/js/779.fb6ef25e.chunk.js","mappings":"+SAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,uGACAD,EAAAA,EAAAA,GAAM,sBAAuB,CAClDE,OAAQ,CACNC,QAASJ,KAHU,uBACfK,EADe,EACfA,KADe,kBAOhBA,EAAKC,SAPW,2CAAH,qDAUTC,EAAe,mCAAG,WAAMC,GAAN,0FACNP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,GAAW,CAChDL,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfI,EAAY,mCAAG,WAAMD,GAAN,0FACHP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,EAAX,YAA8B,CACxDL,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKK,MAPc,2CAAH,sDAUZC,EAAY,mCAAG,WAAMH,GAAN,0FACHP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,EAAX,YAA8B,CACxDL,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZM,EAAY,mCAAG,WAAMC,GAAN,0FACHZ,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASJ,EACTc,eAAe,EACfD,MAAAA,KALsB,uBAClBR,EADkB,EAClBA,KADkB,kBASnBA,EAAKC,SATc,2CAAH,qD,kKC3CZS,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,EAAH,wMAUVE,EAASF,EAAAA,GAAAA,EAAH,uKAQNG,EAAeH,EAAAA,GAAAA,EAAH,4NAWZI,EAAQJ,EAAAA,GAAAA,EAAH,4N,SCkBlB,EA5CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAcR,OAZAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEDjB,EAAAA,EAAAA,IAAaH,GAFZ,OAEhBqB,EAFgB,OAGtBN,EAAWM,GAHW,gDAKtBJ,EAAS,EAAD,IALc,yDAAH,qDAQvBG,GACD,GAAE,CAACpB,KAGF,gCACGgB,IAAS,yBAAMA,KAChB,SAACT,EAAD,UACsB,IAAnBO,EAAQQ,QACP,yBACE,SAACV,EAAD,0CAGFE,EAAQS,KAAI,SAAAC,GAEV,OADAC,QAAQC,IAAIF,IAEV,2BACE,UAACb,EAAD,uBACU,SAACD,EAAD,UAASc,EAAOG,aAE1B,SAAClB,EAAD,UAAae,EAAOI,YAJbJ,EAAOK,GAOnB,QAKV,C","sources":["Services/fetchApi.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '2d47787539d4eda04ce92011fd824a06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCredits = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ReviewText = styled.p`\n  margin: 0 0 20px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 18px;\n  font-family: Orienta, sans-serif;\n  padding-left: 30px;\n`;\n\nexport const Author = styled.p`\n  margin: 0 0 0 10px;\n  font-weight: normal;\n  text-shadow: rgb(0 0 0 / 60%) 1px 1px;\n  font-size: 32px;\n  font-family: Muli, sans-serif;\n`;\n\nexport const ReviewAuthor = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 5px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n\nexport const Error = styled.p`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 5px 0;\n  color: rgb(52, 52, 52);\n  font-weight: normal;\n  font-size: 40px;\n  line-height: 35px;\n  font-family: Orienta, sans-serif;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Services/fetchApi';\nimport {\n  Author,\n  ReviewAuthor,\n  ReviewList,\n  ReviewText,\n  Error,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const result = await fetchReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ReviewList>\n        {reviews.length === 0 ? (\n          <li>\n            <Error>There is no reviews yet..</Error>\n          </li>\n        ) : (\n          reviews.map(review => {\n            console.log(review);\n            return (\n              <li key={review.id}>\n                <ReviewAuthor>\n                  Author: <Author>{review.author}</Author>\n                </ReviewAuthor>\n                <ReviewText>{review.content}</ReviewText>\n              </li>\n            );\n          })\n        )}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","axios","getMovies","params","api_key","data","results","getMovieDetails","movieId","fetchCredits","cast","fetchReviews","fetchByQuery","query","include_adult","ReviewList","styled","ReviewText","Author","ReviewAuthor","Error","useState","reviews","setReviews","error","setError","useParams","useEffect","fetchMovieReviews","result","length","map","review","console","log","author","content","id"],"sourceRoot":""}