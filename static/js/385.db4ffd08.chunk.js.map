{"version":3,"file":"static/js/385.db4ffd08.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","Pages/Movies.jsx","Services/fetchApi.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 5px;\n  margin: 1px 20px;\n  width: 350px;\n  padding: 10px 40px;\n`;\n\nexport const SearchInput = styled.input`\n  border: 1px solid grey;\n  border-radius: 4px;\n  height: 30px;\n  width: 100%;\n  margin: 5px 20px 5px 0;\n  padding-left: 10px;\n  :hover {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n  :focus {\n    box-shadow: 2px 2px 2px rgb(0 0 0 / 70%);\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background: rgb(59, 79, 87);\n  background: linear-gradient(\n    90deg,\n    rgba(59, 79, 87, 1) 13%,\n    rgba(86, 96, 147, 1) 79%\n  );\n  border: 1px solid #000;\n  border-radius: 4px;\n  box-shadow: #fff 4px 4px 0 0, #000 4px 4px 0 1px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 20px;\n  max-weight: 50px;\n  padding: 12px 10px;\n  text-align: center;\n  text-transform: uppercase;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.125) 0 3px 5px inset;\n    outline: 0;\n    box-shadow: #fff 2px 2px 0 0, #000 2px 2px 0 1px;\n    transform: translate(2px, 2px);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { FormSearch, SearchButton, SearchInput } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = evt => {\n    setSearchQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Please, Enter the film title');\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <FormSearch onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"ðŸ”Ž Enter film title for Search\"\n          onChange={handleQuerySearch}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </FormSearch>\n    </>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from '../Services/fetchApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(resp => {\n          if (!resp.length) {\n            alert('Movies not found, please try again!');\n          }\n\n          setMovies(resp);\n        })\n        .catch(error => {\n          setError('404 Page Not Found');\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      <SearchBar onSubmit={onSubmit} />\n      {movies && <MovieList movies={movies} prevLocation={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '2d47787539d4eda04ce92011fd824a06';\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  return resp.data.results;\n};\n\nexport const fetchReviews = async (id, page = 1) => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return resp.data.results;\n};\n\nexport const fetchCredits = async id => {\n  const resp = await axios.get(\n    `movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: block;\n  list-style: circle;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const FilmsTitle = styled.p`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 30px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n\n  :hover {\n    font-size: 31px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 40px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FilmsList, FilmsTitle } from './MovieList.styled';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <FilmsList>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: prevLocation }}\n              style={{ textDecoration: 'none' }}\n            >\n              <FilmsTitle>{original_title}</FilmsTitle>\n            </Link>\n          </li>\n        ))}\n      </FilmsList>\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n"],"names":["FormSearch","styled","SearchInput","SearchButton","onSubmit","useState","searchQuery","setSearchQuery","evt","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","resp","length","catch","finally","Loader","query","MovieList","prevLocation","API_KEY","axios","END_POINTS","getMovies","data","results","getMovieDetails","id","page","fetchReviews","fetchCredits","cast","FilmsList","FilmsTitle","map","original_title","to","state","from","style","textDecoration"],"sourceRoot":""}