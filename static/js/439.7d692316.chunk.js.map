{"version":3,"file":"static/js/439.7d692316.chunk.js","mappings":"+SAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,uGACAD,EAAAA,EAAAA,GAAM,sBAAuB,CAClDE,OAAQ,CACNC,QAASJ,KAHU,uBACfK,EADe,EACfA,KADe,kBAOhBA,EAAKC,SAPW,2CAAH,qDAUTC,EAAe,mCAAG,WAAMC,GAAN,0FACNP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,GAAW,CAChDL,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfI,EAAY,mCAAG,WAAMD,GAAN,0FACHP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,EAAX,YAA8B,CACxDL,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKK,MAPc,2CAAH,sDAUZC,EAAY,mCAAG,WAAMH,GAAN,0FACHP,EAAAA,EAAAA,GAAM,UAAD,OAAWO,EAAX,YAA8B,CACxDL,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZM,EAAY,mCAAG,WAAMC,GAAN,0FACHZ,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASJ,EACTc,eAAe,EACfD,MAAAA,KALsB,uBAClBR,EADkB,EAClBA,KADkB,kBASnBA,EAAKC,SATc,2CAAH,qD,2FC3CZS,E,OAAQC,GAAAA,GAAH,iS,SCUlB,EAVsB,WACpB,OACE,+BACE,0BACE,SAACD,EAAD,iCAIP,E,mCCyBD,EA7B0B,WACxB,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXrB,EAAAA,EAAAA,MACGuB,MAAK,SAAAC,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAP,GACLC,EAAS,qBACV,IACAO,SAAQ,kBAAML,GAAW,EAAjB,GAGd,GAAE,KAED,iCACE,SAAC,EAAD,IACCD,IAAW,SAACO,EAAA,EAAD,IACXT,IAAS,yBAAMA,IACfF,IAAU,SAACY,EAAA,EAAD,CAAWZ,OAAQA,MAGnC,C,yFC/BYa,EAAYf,EAAAA,GAAAA,GAAH,+FAOTgB,EAAahB,EAAAA,GAAAA,EAAH,4T,GAgBFA,EAAAA,GAAAA,GAAH,mR,QCDlB,EApBkB,SAAC,GAA8B,IAA5BE,EAA2B,EAA3BA,OAAQe,EAAmB,EAAnBA,aAC3B,OACE,+BACE,SAACF,EAAD,UACGb,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMN,GACfO,MAAO,CAAEC,eAAgB,QAH3B,UAKE,SAACT,EAAD,UAAaI,OANRD,EADC,OAcnB,C","sources":["Services/fetchApi.js","components/Homepage/HomepageTitle/HomepageTitle.styled.js","components/Homepage/HomepageTitle/HomepageTitle.jsx","components/Homepage/Homepage.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '2d47787539d4eda04ce92011fd824a06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const fetchCredits = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: block;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 45px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: rgba(148, 0, 211, 40%) 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n","import { Title } from './HomepageTitle.styled';\n\nconst HomepageTitle = () => {\n  return (\n    <>\n      <div>\n        <Title>Trending movies</Title>\n      </div>\n    </>\n  );\n};\n\nexport default HomepageTitle;\n","import HomepageTitle from 'components/Homepage/HomepageTitle/HomepageTitle';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'Services/fetchApi';\n\nconst GetTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(result => {\n          setMovies(result);\n        })\n        .catch(error => {\n          setError('404 Page Not Found');\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <>\n      <HomepageTitle />\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default GetTrendingMovies;\n","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: block;\n  list-style: circle;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const FilmsTitle = styled.p`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 30px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n\n  :hover {\n    font-size: 31px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 10px;\n  display: contents;\n  color: rgb(52, 52, 52);\n  font-weight: 800;\n  font-family: Ultra, sans-serif;\n  font-size: 40px;\n  line-height: 42px;\n  text-transform: uppercase;\n  text-shadow: white 0px 2px, rgb(119 119 119) 0px 3px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FilmsList, FilmsTitle } from './MovieList.styled';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <FilmsList>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: prevLocation }}\n              style={{ textDecoration: 'none' }}\n            >\n              <FilmsTitle>{original_title}</FilmsTitle>\n            </Link>\n          </li>\n        ))}\n      </FilmsList>\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n"],"names":["KEY","axios","getMovies","params","api_key","data","results","getMovieDetails","movieId","fetchCredits","cast","fetchReviews","fetchByQuery","query","include_adult","Title","styled","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","then","result","catch","finally","Loader","MovieList","FilmsList","FilmsTitle","prevLocation","map","id","original_title","to","state","from","style","textDecoration"],"sourceRoot":""}